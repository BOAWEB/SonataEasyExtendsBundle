<?php
/*
 * This file is part of the Sonata project.
 *
 * (c) Thomas Rabaix <thomas.rabaix@sonata-project.org>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */


namespace Bundle\EasyExtendsBundle\Command;

use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\Output\Output;
use Symfony\Bundle\DoctrineBundle\Command\DoctrineCommand;

use Symfony\Bundle\FrameworkBundle\Util\Mustache;

/**
 * Generate Application entities from bundle entities
 *
 * @author Thomas Rabaix <thomas.rabaix@sonata-project.org>
 */
class GenerateEntitiesCommand extends DoctrineCommand
{
    protected function configure()
    {
        parent::configure();

        $this
            ->setName('easy-extends:generate:entities')
            ->setHelp(<<<EOT
The <info>easy-extends:generate:entities</info> command generates a set of Entities
in your Application Entity folder from the Entities set in bundles. This command
will allow to generate create custom code from the model.

  <info>./symfony easy-extends:generate:entities </info>
EOT
        );
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        // find a better way to detect the Application folder
        $application_dir = sprintf(
            "%s/../src/Application",
            $this->container->getKernelService()->getRootDir()
        );

        foreach ($this->container->getKernelService()->getBundles() as $bundle) {

            // retrieve the full bundle classname
            $class = $bundle->getReflection()->getName();

            // does not extends Application bundle ...
            if(strpos($class, 'Application') === 0) {
                $output->writeln(sprintf('Ignoring bundle : "<comment>%s</comment>"', $class));
                continue;
            }
            // transform classname to a path and substract it to get the destination
            $path = dirname(str_replace('\\', '/', $class));
            $destination = str_replace('/'.$path, "", $bundle->getPath());

            if ($metadatas = $this->getBundleMetadatas($bundle)) {
                $output->writeln(sprintf('Generating entities for "<info>%s</info>"', $class));

                $entity_dir = sprintf('%s/%s/Entity',
                    $application_dir,
                    $bundle->getName()
                );

                if(count($metadatas) && !is_dir($entity_dir))
                {
                    $output->writeln(sprintf('  > generating folder : "<comment>%s</comment>"', $entity_dir));
                    mkdir($entity_dir, 0755, true);
                }
                
                foreach ($metadatas as $metadata) {
                    $class = substr($metadata->name, strripos($metadata->name, '\\') + 1);

                    $file = sprintf("%s/%s.php",
                        $entity_dir,
                        $class
                    );

                    if(is_file($file))
                    {
                        continue;
                    }
                    
                    $output->writeln(sprintf('  > generating <comment>%s</comment> in <comment>%s</comment>', $metadata->name, $destination));

                    $string = Mustache::renderString($this->getTemplate(), array(
                        'bundle'    => $bundle->getName(),
                        'class'     => $class,
                        'extends'   => $metadata->name
                    ));

                    file_put_contents($file, $string);
                }
            }
        }
        
    }

    public function getTemplate()
    {
        return '<?php
/**
 * This class has been autogenerated by the EasyExtendsBundle
 *
 */

namespace Application\{{ bundle }}\Entity;

/**
 *
 */
class {{ class }} extends \{{ extends }} {

}';
    }
}